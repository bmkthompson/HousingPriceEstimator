import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score


### ACQUIRE DATA ###

df = pd.read_csv('housing_price_dataset.csv', encoding='utf-8', header=0)
columns= ['SquareFeet', 'Bedrooms', 'Bathrooms', 'Neighborhood', 'YearBuilt', 'Price']


### PREPARE THE DATA ###

encoder = LabelEncoder()
df['Neighborhood']= encoder.fit_transform(df['Neighborhood'])

X= df.drop('Price', axis=1)
y= df['Price']

X_train, X_test, y_train, y_test= train_test_split(X, y, test_size= 0.2, random_state= 42)

model= LinearRegression()
model.fit(X_train, y_train)

y_pred= model.predict(X_test)


### RECEIVING USER INPUT ###

neighborhood_encoding = {
    'Urban': 0,
    'Suburban': 1,
    'Rural': 2,
}

def predict_price(sqft, beds, baths, neighborhood, year):
    input_data = {
        'SquareFeet': [sqft],
        'Bedrooms': [beds],
        'Bathrooms': [baths],
        'Neighborhood': [neighborhood_encoding.get(neighborhood, -1)],
        'YearBuilt': [year]
    }
    
    input_df = pd.DataFrame(input_data)
    predicted_price = model.predict(input_df)
    
    return round(predicted_price[0], 2)


SquareFeet = float(input("Enter square footage: "))
Bedrooms = int(input("Enter number of bedrooms: "))
Bathrooms = int(input("Enter number of bathrooms: "))
YearBuilt = int(input("Enter year: "))
Neighborhood = input("Enter neighborhood: ")

predicted = predict_price(SquareFeet, Bedrooms, Bathrooms, Neighborhood, YearBuilt)
print(f"The predicted price is: ${predicted}")


